##########################################
# Final Project					    	  #
# Chao Gao (CG3283)  Dantong Zhu (dz2451) #
##########################################

# Add a new schema called `drug`
CREATE SCHEMA drug;

# Write a statement that applies all subsequent code to the weighin schema
USE drug;

# Parent table: Participants table
CREATE TABLE participants (
	PRIMARY KEY (participant_id),
    participant_id SMALLINT UNSIGNED AUTO_INCREMENT,
    participant_dob DATE,
    sex VARCHAR(8),
    age TINYINT UNSIGNED,
    education VARCHAR(100),
    drug_name VARCHAR(225),
    drug_id TINYINT UNSIGNED
);

CREATE INDEX participant_dob
	ON participants(participant_dob);
    
CREATE INDEX drug_id
	ON participants(drug_id);
   
# Child table: Visits table
CREATE TABLE visits (
	PRIMARY KEY (visit_id),
    visit_id MEDIUMINT UNSIGNED AUTO_INCREMENT,
    participant_id SMALLINT UNSIGNED,
    visitor_name VARCHAR(100),
    visit_date DATE,
    visit_time VARCHAR(100),
  	result SAMLLINT UNSIGNED,
    FOREIGN KEY (participant_id) REFERENCES participants(participant_id) ON UPDATE CASCADE
);

CREATE INDEX visit_date
	ON visits(visit_date);
    
CREATE INDEX visit_time
	ON visits(visit_time);

# Look up table: Adverse_events table
CREATE TABLE adverse_events (
	PRIMARY KEY (ae_id),
    ae_id TINYINT UNSIGNED AUTO_INCREMENT,
    ae_type VARCHAR(225)
);

CREATE INDEX ae_id
	ON adverse_events(ae_id);

# Child table: Adverse_events_log table
CREATE TABLE adverse_events_log (
	PRIMARY KEY (ae_log_id),
    ae_log_id TINYINT UNSIGNED AUTO_INCREMENT,
    drug_id TINYINT UNSIGNED,
    visit_id MEDIUMINT UNSIGNED,
    ae_id TINYINT UNSIGNED,
    ae_date DATE,
    ae_duration TINYINT UNSIGNED,
    FOREIGN KEY (drug_id) REFERENCES participants(drug_id) ON UPDATE CASCADE,
    FOREIGN KEY (visit_id) REFERENCES visits(visit_id) ON UPDATE CASCADE,
    FOREIGN KEY (ae_id) REFERENCES adverse_events(ae_id) ON UPDATE CASCADE
);

CREATE UNIQUE INDEX ae_unique
	ON adverse_events_log(drug_id, visit_id, ae_id);
    
CREATE INDEX ae_id
	ON adverse_events_log(ae_id);
    
CREATE INDEX drug_id
	ON adverse_events_log(drug_id);

CREATE INDEX visit_id
	ON adverse_events_log(visit_id);


############
# TRIGGERS #
############

# Trigger for Participants Table
DELIMITER //

CREATE TRIGGER trigger_participants
	BEFORE INSERT ON participants
    FOR EACH ROW
BEGIN
	/* Limit age range: 18 to 55 */
    IF NEW.age < 18 OR NEW.age > 55 THEN
		SIGNAL SQLSTATE 'HY000'
        SET MESSAGE_TEXT = 'Valid age range is 18 to 55 years';
	END IF;
    
END//


# Trigger for visits table
DELIMITER //

CREATE TRIGGER trigger_visits
	BEFORE INSERT ON visits
    FOR EACH ROW
BEGIN
	/* Limit visit_type to 0, 4, 8, 12, 16, or 20 */
    IF NEW.visit_date > CURDATE() THEN
		SIGNAL SQLSTATE 'HY000'
        SET MESSAGE_TEXT = 'Valid event dates are before or containing today';
	END IF;

END//


# Trigger for adverse_event_log table
DELIMITER //

CREATE TRIGGER trigger_ae_log
	BEFORE INSERT ON adverse_events_log
    FOR EACH ROW
BEGIN
	/*Limit event_date to dates between 6/15/2017 and today*/
	IF NEW.ae_date > CURDATE() THEN
		SIGNAL SQLSTATE 'HY000'
        SET MESSAGE_TEXT = 'Valid event dates are before or containing today';
	END IF;
    
END//

##############
# DATA ENTRY #
##############

/**** Think about the order in which to enter data into the tables to avoid errors related to orphaned records ****/

# Enter data into participants table
INSERT INTO participants (participant_dob, sex, age, education, drug_name, drug_id)
 VALUES
    ("1997-08-21", "female", "25", "undergraduate", "praluent", "001"),
    ("1998-09-22", "female", "24", "graduate", "praluent", "001"),
    ("1999-06-23", "male", "23", "undergraduate", "praluent", "001"),
    ("1999-05-24", "male", "23", "graduate", "praluent", "001"),
    ("1996-04-25", "female", "26", "phd", "praluent", "001"),
    ("1987-06-23", "male", "35", "undergraduate", "praluent", "001"),
	  ("1997-01-11", "female", "25", "undergraduate", "statin", "002"),
    ("1998-02-12", "female", "24", "graduate", "statin", "002"),
    ("1999-04-13", "male", "23", "undergraduate", "statin", "002"),
    ("1999-05-14", "male", "23", "graduate", "statin", "002"),
    ("1996-06-15", "female", "26", "phd", "statin", "002"),
    ("1987-07-13", "male", "35", "undergraduate", "statin", "002");

# Enter data into visits table
INSERT INTO visits (participant_id, visit_name, visit_date, visit_time, result)
 VALUES
 	(1, 'visit_0', "2017-08-21", '08:04', 139),
    (1, 'visit_1', "2017-08-24", '08:05', 100),
    (1, 'visit_2', "2017-08-27", '08:06', 75),
    
    (2, 'visit_0',	"2017-04-24", '11:03', 110),
     (2, 'visit_1',	"2017-04-27", '11:53', 85),
     (2, 'visit_2',	"2017-04-30", '11:22', 75),
    
    (3, 'visit_0', "2017-05-19", '11:19', 185),
    (3, 'visit_1', "2017-05-22", '11:29', 145),
    (3, 'visit_2', "2017-05-25", '11:49', 95),
    
    (4, 'visit_0', "2016-04-09", '15:38', 155),
     (4, 'visit_1', "2016-04-12", '15:27', 125),
     (4, 'visit_2', "2016-04-15", '15:17', 100),
   
	(5, 'visit_0', "2021-08-26", '02:05', 144),
    (5, 'visit_1', "2021-08-29", '02:15', 114),
    (5, 'visit_2', "2021-09-01", '02:25', 84),
    
    (5, 'visit_0', "2021-08-26", '04:25', 124),
    (5, 'visit_1', "2021-08-29", '06:15', 94),
    (5, 'visit_2', "2021-09-01", '05:25', 51),
    
    (6, 'visit_0', "2021-03-26", '14:25', 114),
    (6, 'visit_1', "2021-03-29", '16:15', 88),
    (6, 'visit_2', "2021-03-01", '15:25', 62),
 
  	(7, 'visit_0', "2017-02-21", '08:14', 149),
    (7, 'visit_1', "2017-02-24", '08:25', 120),
    (7, 'visit_2', "2017-02-27", '08:46', 89),
    
    (8, 'visit_0',	"2017-09-24", '11:13', 140),
     (8, 'visit_1',	"2017-09-27", '11:23', 104),
     (8, 'visit_2',	"2017-09-30", '11:32', 85),
    
    (9, 'visit_0', "2017-03-09", '12:19', 166),
    (9, 'visit_1', "2017-03-12", '12:29', 145),
    (9, 'visit_2', "2017-03-15", '12:49', 122),
    
    (10, 'visit_0', "2018-04-09", '16:38', 133),
     (10, 'visit_1', "2018-04-12", '16:37', 125),
     (10, 'visit_2', "2018-04-15", '16:17', 110),
   
	(11, 'visit_0', "2020-10-26", '02:05', 122),
    (11, 'visit_1', "2020-10-29", '02:15', 94),
    (11, 'visit_2', "2020-10-01", '02:25', 64),
    
    (12, 'visit_0', "2021-01-01", '14:25', 174),
    (12, 'visit_1', "2021-01-04", '16:15', 134),
    (12, 'visit_2', "2021-01-07", '06:25', 100),
    
    (6, 'visit_0', "2021-03-26", '14:25', 114),
    (6, 'visit_1', "2021-03-29", '16:15', 88),
    (6, 'visit_2', "2021-03-01", '15:25', 62);

# Enter data into adverse_events table
INSERT INTO adverse_events (ae_type)
 VALUES
	("Excessive fatigue"), 
	("Reaction to medication"),
	("Erythema"),
	("Constipation"),
	("Skin rash"),
	("Normal reaction"),
    ("Skin swell"),
    ("Vomit"),
    ("Nausia"),
    ("Headache"),
    ("Other");


# Enter data into adverse_events_log table
INSERT INTO adverse_events_log (drug_id, visit_id, ae_id,ae_date,ae_duration)
 VALUES
	('002', 3, 4, "2019-08-29", 20),
	('001', 2, 5, "2018-09-30", 30),
	('002', 3, 11, "2019-11-12", 10),
	('001', 4, 4, "2022-02-19", 25),
	('001', 5, 5, "2020-06-10", 35),
	('002', 7, 3, "2021-12-22", 15),
  ('001', 9, 4, "2022-01-12", 15),
	('002', 10, 5, "2020-04-13", 32),
	('002', 13, 3, "2021-10-24", 14),
  ('001', 12, 10, "2021-05-10", 12),
	('001', 11, 6, "2017-04-11", 30),
	('001', 1, 10, "2018-06-22", 8),
  ('001', 6, 4, "2019-07-19", 05),
	('002', 15, 1, "2020-08-10", 12),
	('002', 8, 3, "2021-10-22", 4),
  ('002', 8, 9, "2021-10-22", 2),
  ('002', 6, 10, "2021-10-22", 6),
  ('001', 5, 10, "2021-10-22", 9),
  ('002', 7, 9, "2021-10-22", 12),
  ('001', 9, 10, "2021-10-22", 15);
  
  
